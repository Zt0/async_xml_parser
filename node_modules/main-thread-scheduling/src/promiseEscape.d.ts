/**
 * If called at the end of an async method, it will wait for the async to get resolved in the
 * parent method that called it and will execute the provided callback in the next microtask.
 * @param callback {Function} The callback that will be executed.
 */
export declare function requestPromiseEscape(callback: () => void): number;
/**
 * Cancels the request to escape promise.
 * @param id {number | undefined} The id returned by the `requestPromiseEscape()` call.
 */
export declare function cancelPromiseEscape(id: number | undefined): void;
